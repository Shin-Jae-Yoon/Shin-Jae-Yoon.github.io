{"/":{"title":"개발자 유니의 두 번째 뇌","content":"\n\u003cstrong\u003e백엔드 개발자\u003c/strong\u003e 신재윤입니다. \u003cbr\u003e\n\n\u003e 제텔카스텐 기법으로 구성된, 저의 두 번째 뇌 (Second Brain)에 오신것을 환영합니다. 때때로, 디지털-정원 (Digital-Garden)으로도 불리는 이곳에서는 꾸준히 모은 단편적인 개발 지식을 \u003cstrong\u003e새롭고 통합된 지식\u003c/strong\u003e으로 전환합니다. 천천히 저의 자그마한 정원을 둘러보며,  생각이라는 작은 씨앗들이 어떻게 자라며 연결되는지 확인해보세요!\n\n\u003chr\u003e\n\n\n\u003e [!Quote] 공개 지식 저장소 사용 방법 \n\u003e - 백링크와 연결된 그래프로 정보 간 연결 확인\n\u003e - 그래프 안보이면 새로고침\n\u003e - **cmd/ctrl + k**  : 검색 기능 활용\n\u003e \u003cbr\u003e\n\u003e 1.  🧑‍💻 Who is Uni? \u003cbr\u003e\n\u003e ↳ Look at my [portfolio](about) \u003cbr\u003e \n\u003e \n\u003e 2. 📚 How do I study? \u003cbr\u003e\n\u003e ↳ Record what I learned today [[notes/TIL/TIL]] \u003cbr\u003e\n\u003e \n\u003e 3. 💻  How prepare tech Interview? \u003cbr\u003e\n\u003e ↳ Through mock interview [[notes/Interview/Interview]] \u003cbr\u003e\n","lastmodified":"2023-02-10T14:01:36.355828218Z","tags":null},"/about":{"title":"About","content":"신재윤은 어떤 개발자인가?\n","lastmodified":"2023-02-10T14:01:36.355828218Z","tags":null},"/notes/Interview/Interview":{"title":"Interview","content":"## Tech Interview\n\n\u003e 꼬리에 꼬리를 무는 면접 대비\n\n","lastmodified":"2023-02-10T14:01:36.355828218Z","tags":null},"/notes/TIL/TIL":{"title":"TIL","content":"\n## Today I Leraned\n\n\u003e [!EXAMPLE] 기억의 활성화, 망각 곡선 이겨내기 \u003cbr\u003e\n\u003e \u003cbr\u003e\n\u003e 여러 학습을 통해서 습득한 단편적인 지식들을 \u003cbr\u003e\n\u003e 통합하여 새로운 지식으로 전환하여 \u003cbr\u003e\n\u003e 두 번째 뇌를 만드는 것이 궁극적인 목표\n\n\n1. 연결된 지식을 보는 [정보 저장소](notes/TIL/brain/brain)\n2. [강의](notes/TIL/lecture/lecture)를 편하게 정리하는 공간\n3. [도서](notes/TIL/book/book)를 편하게 정리하는 공간\n","lastmodified":"2023-02-10T14:01:36.355828218Z","tags":null},"/notes/TIL/book/book":{"title":"도서","content":"","lastmodified":"2023-02-10T14:01:36.355828218Z","tags":null},"/notes/TIL/brain/brain":{"title":"brain","content":"","lastmodified":"2023-02-10T14:01:36.355828218Z","tags":null},"/notes/TIL/lecture/html_css/apple":{"title":"코딩애플","content":"\n## 코딩애플 강의\n\n  \n\n\u003cbr\u003e\u003cbr\u003e\n\n  \n\n## HTML\n\n  \n\n\u003cbr\u003e\n\n  \n\n### HTML 태그\n\n  \n\n\u003cbr\u003e\n\n  \n\n- 띄어쓰기를 하고 원하는 class 붙이면 클래스 2개 이상 가능\n\n  \n\n```html\n\n\u003cdiv class=\"container text-center\"\u003e\u003c/div\u003e\n\n```\n\n  \n\n\u003cbr\u003e\n\n  \n\n### input 태그 name 속성\n\n  \n\n\u003cbr\u003e\n\n  \n\n- input 태그에 name 속성을 지정하면 서버에 name에 해당하는 변수로 데이터를 전송하게 된다.\n\n  \n\n```html\n\n\u003cinput type=\"text\" name=\"age\" /\u003e\n\n\u003c!-- age라는 변수로 서버에 전송 --\u003e\n\n```\n\n  \n\n서버에 데이터 전송할 때 방식 2개\n\n1. \u003cinput type=\"submit\"\u003e\n\n2. \u003cbutton type=\"submit\"\u003e전송\u003c/button\u003e\n\n  \n\n\u003cbr\u003e\n\n  \n\n### select 태그\n\n  \n\n\u003cbr\u003e\n\n  \n\n- 드롭다운 구현 가능\n\n  \n\n```html\n\n\u003cselect\u003e\n\n\u003coption\u003e자장면\u003c/option\u003e\n\n\u003coption\u003e짬뽕\u003c/option\u003e\n\n\u003coption\u003e탕수육\u003c/option\u003e\n\n\u003c/select\u003e\n\n```\n\n  \n\n\u003cbr\u003e\n\n  \n\n### label 태그\n\n  \n\n\u003cbr\u003e\n\n  \n\n- input 태그 체크박스 활용할 때 의미 없는 글자는 span 태그를 사용해도 되지만, label 태그를 이용해보자.\n\n- input태그의 id와 label 태그의 for를 동일하게 맞춰주면 label 태그의 글자를 클릭해도 체크박스가 선택된다.\n\n  \n\n```html\n\n\u003cinput id=\"sub\" type=\"checkbox\" /\u003e \u003clabel for=\"sub\"\u003eSubscribe\u003c/label\u003e\n\n```\n\n  \n\n### table\n\n  \n\n\u003cbr\u003e\n\n  \n\n- table 태그로 감싸며 thead 태그와 tbody 태그를 써주는 것이 보기 좋다.\n\n- 그리고 tr 태그로 행 먼저, 그 이후 td 태그로 열, 아래는 3행 3열 테이블\n\n  \n\n```html\n\n\u003ctable\u003e\n\n\u003cthead\u003e\n\n\u003ctr\u003e\n\n\u003ctd\u003e\u003c/td\u003e\n\n\u003ctd\u003e\u003c/td\u003e\n\n\u003ctd\u003e\u003c/td\u003e\n\n\u003c/tr\u003e\n\n\u003c/thead\u003e\n\n\u003ctbody\u003e\n\n\u003ctr\u003e\n\n\u003ctd\u003e\u003c/td\u003e\n\n\u003ctd\u003e\u003c/td\u003e\n\n\u003ctd\u003e\u003c/td\u003e\n\n\u003c/tr\u003e\n\n\u003ctr\u003e\n\n\u003ctd\u003e\u003c/td\u003e\n\n\u003ctd\u003e\u003c/td\u003e\n\n\u003ctd\u003e\u003c/td\u003e\n\n\u003c/tr\u003e\n\n\u003c/tbody\u003e\n\n\u003c/table\u003e\n\n```\n\n  \n\n- 셀 병합을 할때는 `\u003ctd colspan=\"4\"\u003e\u003c/td\u003e`와 같이 colspan에 합치기 원하는 숫자를 넣기\n\n- 추가로 html 테이블에서 td의 width를 설정하면 전체 열의 width가 변한다.\n\n  \n\n\u003cbr\u003e\u003cbr\u003e\n\n  \n\n## CSS\n\n  \n\n\u003cbr\u003e\n\n  \n\n### float 속성\n\n  \n\n\u003cbr\u003e\n\n  \n\n- float는 요소를 **공중에** 붕 띄워서 왼쪽/오른쪽 정렬하는 속성\n\n- 공중에 붕 띄는 속성 때문에 다음에 오는 div 박스가 보이지 않는 경우 발생\n\n- `clear: both`를 이용해서 초기화 해줘야함\n\n  \n\n```css\n\n.box_practice .article01 {\n\nfloat: left;\n\n}\n\n  \n\n.box_practice .article02 {\n\nfloat: right;\n\n}\n\n  \n\n.box_practice .footer {\n\nclear: both;\n\n}\n\n```\n\n  \n\n[ 참고 ]\n\nfloat 속성으로 가로 정렬할 때\n\nfloat 박스들을 감싸난 하나의 큰 div 박스를 만들고\n\n폭을 지정해주는게 좋다. 그래야 모바일에서\n\n흘러넘치지 않는다.\n\n  \n\n```html\n\n\u003cdiv\u003e\n\n\u003cdiv class=\"left-box\"\u003e\u003c/div\u003e\n\n\u003cdiv class=\"right-box\"\u003e\u003c/div\u003e\n\n\u003cdiv class=\"footer\"\u003e\u003c/div\u003e\n\n\u003c/div\u003e\n\n```\n\n  \n\n\u003cbr\u003e\n\n  \n\n### Selector 셀렉터\n\n  \n\n\u003cbr\u003e\n\n  \n\n- 셀렉터 사용 시 공백 말고 꺽쇠( `\u003e` )도 가능\n\n- 단, 꺽쇠 사용 시 4~5개 이상 연달아쓰는건 권장X 버그의 원인\n\n  \n\n```html\n\n\u003cui class=\"navbar\"\u003e\n\n\u003cli\u003e\u003cspan\u003e안녕\u003c/span\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003c/li\u003e\n\n\u003c/ui\u003e\n\n```\n\n  \n\n```css\n\n.navbar li \u003e span {\n\ncolor: red;\n\n}\n\n```\n\n  \n\n\u003cbr\u003e\n\n  \n\n- `nth-child()` 셀렉터는 여러 요소 중 원하는 n번째 요소에 스타일을 주기 위함이다.\n\n  \n\n```css\n\n.cart-table td:nth-child(2) {\n\ncolor: red;\n\n}\n\n  \n\n.cart-table td:nth-child(n + 2) {\n\ncolor: blue;\n\n}\n\n```\n\n  \n\n- 위의 코드는 2번째에 나오는 td에만 color를 주는 것이고\n\n- 아래의 코드는 2번째 이후에 나오는 td들에 color를 주겠다는 것\n\n  \n\n\u003cbr\u003e\n\n  \n\n### background 속성\n\n  \n\n\u003cbr\u003e\n\n  \n\n- 그냥 이미지를 넣어도 되지만, background도 생각\n\n- `background-image: url(./img/img03.png);` 배경 이미지 설정 (이때, url 여러개 넣어서 배경 겹치기 가능)\n\n- `background-size: cover;` 배경 이미지 div 박스에 꽉차게\n\n- `background-size: contain;` 배경 이미지 잘리지 않게\n\n- `background-repeat: no-repeat;` 반복되는거 없애기\n\n- `background-position: center;` center를 기준으로 배경 채움\n\n- `background-attachment: fixed;` 스크롤 될 때 배경 동작 설정 방식\n\n- `filter: brightness(50%)` 배경에 보정 입히기 - 명도 (단, 안에 글씨 있으면 글씨도 필터가 입혀지니까 이는 조심하자.)\n\n  \n\n\u003cbr\u003e\n\n  \n\n### 배경에 검은색 틴트 주기\n\n  \n\n\u003cbr\u003e\n\n  \n\n```css\n\n.main-background {\n\nbackground-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)),\n\nurl(이미지경로~~);\n\n}\n\n```\n\n  \n\n\u003cbr\u003e\n\n  \n\n### margin collapse 현상\n\n  \n\n\u003cbr\u003e\n\n  \n\nmargin collapse 현상은, div 박스 두 개가 겹친 경우에 **박스 2개의 위쪽 테두리가 겹치면, margin도 합쳐지는 현상**을 의미한다.\n\n  \n\n```html\n\n\u003cdiv class=\"main-background\"\u003e\n\n\u003ch4 class=\"main-title\"\u003eBuy Our Shoes!\u003c/h4\u003e\n\n\u003c/div\u003e\n\n```\n\n  \n\n이 경우에서 박스 2개가 겹쳐지게 되어, main-title에 margin-top을 주면 margin이 합쳐진 현상이라 같이 내려가게 될 것이다. 해결방안으로는, 테두리가 안붙게 하면 된다. 부모 박스에 `padding: 1px`과 같은 조작을 취하면 된다.\n\n  \n\n\u003cbr\u003e\n\n  \n\n### 좌표 이동\n\n  \n\n\u003cbr\u003e\n\n  \n\n- `position` 속성 부여하여 좌표이동 가능해짐.\n\n- 특징 01 : 좌표 이동 가능\n\n- 특징 02 : float와 비슷하게 공중에 뜨는 원리\n\n- `position: relative` 내 원래 위치가 기준\n\n  \n\n```css\n\n.main-button {\n\nposition: relative;\n\ntop: 100px; // 위쪽에서부터 100px\n\nleft: 100px; // 왼쪽에서부터 100px\n\n}\n\n```\n\n  \n\n- `position: static` 좌표 이동 금지\n\n- `position: fixed` 현재 화면 (viewport) 기준으로 고정\n\n- navbar 같은거 스크롤 해도 상단에 고정시키면 좋으니까, 그럴 때 사용\n\n- `position: absolute` 내 부모 태그 중에 `position: relative` 가진 부모를 기준으로 한다.\n\n- `position: absolute` 요소를 **가운데 정렬**하는 방법\n\n  \n\n```css\n\n.main-btn {\n\nposition: absolute;\n\nleft: 0;\n\nright: 0;\n\nmargin: auto;\n\nwidth: 30%;\n\n}\n\n```\n\n  \n\n\u003cbr\u003e\n\n  \n\n### z-index\n\n  \n\n\u003cbr\u003e\n\n  \n\n- div 박스가 겹칠 때 우선순위를 두기\n\n- `z-index: 1`, `z-index: 5` 숫자가 클 수록 (높을 수록) 앞에 온다.\n\n  \n\n\u003cbr\u003e\n\n  \n\n### width의 영역에 관한 문제\n\n  \n\n\u003cbr\u003e\n\n  \n\n- width는 div 박스의 너비가 아니라 **width는 내부 content 영역의 너비를 의미한다.** padding이나 border에 width는 영향을 주지 않는다.\n\n- 해결하려면, content 부분만 width로 설정하는 것이 아니라, padding과 border를 모두 포함하라고 시키면 된다.\n\n- `box-sizing: border-box;` - width가 padding, border를 포함한다.\n\n- content-box는 padding과 border를 포함하지 않는 경우이다.\n\n- 아래의 예제로 box-sizing이 있고 없고를 비교해보기\n\n  \n\n```css\n\n.explain-box {\n\nposition: relative;\n\nmargin: auto;\n\npadding: 20px;\n\ntext-align: center;\n\ntop: -80px;\n\nmax-width: 600px;\n\nwidth: 80%;\n\nheight: 40%;\n\nbackground-color: rgb(238, 237, 239);\n\nbox-sizing: border-box;\n\n}\n\n```\n\n  \n\n\u003cbr\u003e\n\n  \n\n### css 초기 설정시 편한 것, normalize\n\n  \n\n\u003cbr\u003e\n\n  \n\n```css\n\nbody {\n\nmargin: 0px;\n\n}\n\n  \n\ndiv {\n\nbox-sizing: border-box;\n\n}\n\n  \n\nhtml {\n\nline-height: 1.15; /* 기본 행간 높이 */\n\n}\n\n```\n\n  \n\n\u003cbr\u003e\n\n  \n\n혹은 크롬, 파이어폭스, 사파리와 같이 브라우저 호환성 이슈가 있을 때 css 파일에 추가하고 시작하면 좋은 설정들이 있다. (버튼의 크기나 이미지가 브라우저마다 다르거나 한 경우 때문에)\n\n  \n\n\u003cbr\u003e\n\n  \n\n[normalize.css](https://github.com/necolas/normalize.css/blob/master/normalize.css)를 참고하도록 하자.\n\n  \n\n\u003cbr\u003e\n\n  \n\n### input type에 따른 css 셀렉터\n\n  \n\n\u003cbr\u003e\n\n  \n\n- 아래와 같이 지정하면 input type이 text인 아이들만 css 스타일링 가능\n\n  \n\n```css\n\ninput[type='text'] {\n\npadding: 10px;\n\nfont-size: 20px;\n\nborder: 1px solid black;\n\n}\n\n```\n\n  \n\n\u003cbr\u003e\n\n  \n\n### vertical-align 속성\n\n  \n\n\u003cbr\u003e\n\n  \n\n- inline/inline-block 요소 간의 세로정렬 할 때 vertical-align을 사용한다.\n\n- 테이블 사용 시 수직 정렬에도 사용 가능\n\n- pratice02.html에서 실패했던 이유는 ? div박스와 조작을 시도했기 때문\n\n- 해결책은 하나의 div 박스 내에서 img와 글자를 span태그로 묶어서 그 둘을 vertical-align 했으면 가능했을 듯하다.\n\n  \n\n```html\n\n\u003cdiv\u003e\n\n\u003cimg\n\nsrc=\"https://mdn.mozillademos.org/files/12245/frame_image.svg\"\n\nwidth=\"32\"\n\nheight=\"32\"\n\n/\u003e\n\n\u003cspan style=\"vertical-align : middle;\"\u003e\n\nimage with a default alignment.\u003c/span\n\n\u003e\n\n\u003c/div\u003e\n\n```\n\n  \n\n\u003cbr\u003e\n\n  \n\n### table 태그 border-radius 오류\n\n  \n\n\u003cbr\u003e\n\n  \n\n- border-collapse 속성을 table 태그에 적용했을 때 border-radius가 안먹는 오류가 있다.\n\n  \n\n- 첫 번째 해결방안\n\n  \n\n```css\n\ntable {\n\nborder-collapse: collapse;\n\nborder-spacing: 0;\n\n}\n\n  \n\n(왼쪽위에있는 td) {\n\nborder-top-left-radius: 5px;\n\n}\n\n```\n\n  \n\n- 두 번째 해결방안\n\n- box-shadow 속성을 이용하여 테두리를 가짜로 만들어내는 편법\n\n  \n\n```css\n\ntable {\n\nborder-collapse: collapse;\n\nborder-radius: 7px;\n\nborder-style: hidden;\n\nbox-shadow: 0 0 0 1px #666;\n\n}\n\n```\n\n  \n\n\u003cbr\u003e\n\n  \n\n### button 태그 같이 hover 할 때 마우스 커서\n\n  \n\n\u003cbr\u003e\n\n  \n\n- `:hover`로 pseudo-class를 하지 않아도 `cursor:pointer`와 같이 작성하면 올렸을 때 마우스 커서 바뀜\n\n  \n\n```css\n\nbutton {\n\npadding: 15px;\n\nfont-size: 20px;\n\nborder: none;\n\ncursor: pointer;\n\n}\n\n```\n\n  \n\n\u003cbr\u003e\n\n  \n\n### input 태그 focus 스타일 안먹힐 때\n\n  \n\n\u003cbr\u003e\n\n  \n\n- `input:focus`를 해서 border 속성을 지정했는데 색깔이 안먹는 경우가 있다.\n\n- 그럴때는 크롬 기본속성인 outline을 none으로 설정해주자.\n\n  \n\n```css\n\n.cart-footer .input-test:focus {\n\noutline: none;\n\nborder: 2px solid rgb(2, 77, 163);\n\n}\n\n```\n\n  \n\n\u003cbr\u003e\n\n  \n\n### css의 다양한 pseudo-class\n\n  \n\n\u003cbr\u003e\n\n  \n\n```css\n\n/* 외우는법 hofa */\n\n:hover /*마우스를 올려놓을 때*/\n\n:focus /*클릭 후 계속 포커스 상태일 때*/\n\n:active /*클릭 중일 때*/\n\n  \n\n:link /* 방문 전 링크 */\n\n:visited /* 방문 후 링크 */\n\n:any-link /*방문 전, 방문 후 링크 한번에 선택할 때*/\n\n  \n\n:playing /*동영상, 음성이 재생중일 때*/\n\n:paused /*동영상, 음성이 정지시*/\n\n:autofill /*input의 자동채우기 스타일*/\n\n:disabled /*disabled된 요소 스타일*/\n\n:checked /*체크박스나 라디오버튼 체크되었을 때*/\n\n  \n\n:blank /*input이 비었을 때*/\n\n:valid /*이메일 input 등에 이메일 형식이 맞을 경우*/\n\n:invalid /*이메일 input 등에 이메일 형식이 맞지 않을 경우*/\n\n:required /*필수로 입력해야할 input의 스타일*/\n\n  \n\n:nth-child(n) /*n번째 자식 선택*/\n\n:first-child /*첫째 자식 선택*/\n\n:last-child /*마지막 자식 선택*/\n\n```\n\n  \n\n\u003cbr\u003e\n\n  \n\n### 코드 양이 줄어드는 class 작명법 (OOCSS, BEM)\n\n  \n\n\u003cbr\u003e\n\n  \n\n- **OOCSS (Object Oriented CSS)**\n\n- CSS 양이 줄어들고, 유지보수 편리\n\n- 뼈대용 class, 살점용 class 각각 제작\n\n- 뼈대 디자인을 먼저 분리해놓고 색깔과 같은 살점을 추가하는 방식\n\n  \n\n```html\n\n\u003cbutton class=\"main-btn bg-red\"\u003e버튼1\u003c/button\u003e\n\n\u003cbutton class=\"main-btn bg-blue\"\u003e버튼2\u003c/button\u003e\n\n```\n\n  \n\n```css\n\n.main-btn {\n\npadding: 15px;\n\nfont-size: 20px;\n\nborder: none;\n\ncursor: pointer;\n\n}\n\n  \n\n.bg-red {\n\nbackground: red;\n\n}\n\n  \n\n.bg-blue {\n\nbackground: blue;\n\n}\n\n```\n\n  \n\n- OOCSS를 극단적으로 여러 **Utility class**를 만들어 놓을 수 있다.\n\n  \n\n```css\n\n.f-small {\n\nfont-size: 12px;\n\n}\n\n  \n\n.f-mid {\n\nfont-size: 16px;\n\n}\n\n  \n\n.f-lg {\n\nfont-size: 20px;\n\n}\n\n  \n\n.bg-red {\n\nbackground: red;\n\n}\n\n  \n\n.bg-blue {\n\nbackground: blue;\n\n}\n\n```\n\n  \n\n```html\n\n\u003cbutton class=\"main-btn bg-red f-lg\"\u003e버튼\u003c/button\u003e\n\n```\n\n  \n\n\u003cbr\u003e\n\n  \n\n- **BEM (Block\\_\\_Element--Modifier)**\n\n- class 작명할 때 창의력이 부족한 경우 BEM 작명법을 이용할 수 있다.\n\n- `class = \"덩어리이름__역할--세부특징\"`\n\n  \n\n```html\n\n\u003cdiv class=\"profile\"\u003e\n\n\u003cimg class=\"profile__img\" /\u003e\n\n\u003ch4 class=\"profile__title\"\u003e\u003c/h4\u003e\n\n\u003cp class=\"profile__content\"\u003e\u003c/p\u003e\n\n  \n\n\u003cbutton class=\"profile__button--red\"\u003e버튼1\u003c/button\u003e\n\n\u003cbutton class=\"profile__button--blue\"\u003e버튼2\u003c/button\u003e\n\n\u003c/div\u003e\n\n```\n\n  \n\n- 사람마다 다르다. OOCSS를 쓰면 html이 더러워져서 추천하지 않는 사람도 있음\n\n- BEM도 Modifer는 빼고 Block\\_\\_Element까지만 쓰는 사람도 있음\n\n  \n\n\u003cbr\u003e\n\n  \n\n- 최근, React나 Vue로 HTML 만들면 굳이 OOCSS, BEM 굳이 안쓰는 경우가 많아서 깊게 익힐 필요 X\n\n- React나 Vue에서는 html 페이지 단위가 아닌, 작은 덩어리 (component) 단위로 개발하게 된다. 이때 profile과 같이 class 명이 중복되어도 컴포넌트끼리 스타일이 간섭되지 않게 코드 작성이 가능하다. 대표적으로, React의 styled-components 라이브러리를 사용하면 가능하다.","lastmodified":"2023-02-10T14:01:36.355828218Z","tags":null},"/notes/TIL/lecture/lecture":{"title":"강의","content":"\n## HTML_CSS\n\n### 코딩애플 강의 \n\n- [코딩애플](notes/TIL/lecture/html_css/apple) ","lastmodified":"2023-02-10T14:01:36.355828218Z","tags":null}}